<script>
import {syncModel} from "../utils";

export default {
  name: 'a-tabs',
  data() {
    return {
      current: 0
    }
  },
  install() {
    const ns = 'a-tabs';
    syncModel.call(this);

    this.breakpoint = this.props.breakpoint || 5;

    this.current = this.$model.active || 0;


    const isScroll = this.props.children.length > this.breakpoint;

    const navCls = ns + '__nav--' + (isScroll ? 'scroll' : 'flat');

    this.render = props => {

      return h('view', {class: `${ns}`},
          h(isScroll ? 'scroll-view' : 'view', {
                class: `${ns}__wrap`,
                'scroll-x': true,
                'scroll-y': false
              },
              props.children.map((child, index) =>
                  h('text', {
                    class: `${ns}__nav ${navCls} ${parseInt(this.current) === index ? ns + '__nav--active' : ns + '__nav--normal'}`,
                    onclick: this.onclick.bind(this, index)
                  }, child.attributes.title))
          ),
          h('swiper', {
                class: `${ns}__content`,
                onchange: this.onchange,
                current: this.current
              },
              props.children.map((child, index) => h('swiper-item', {
                class: `${ns}__pane`
              }, child))
          )
      )
    };
  },

  onchange({detail: {current}}) {
    this.fire('onchange', {current, type: 'swiper'});
    this.current = current;
    this.$model.active = current;

    console.log([current, this.breakpoint])
    if (current >= this.breakpoint - 1) {
      this.setNavPos();
    }
  }
  ,
  onclick(current) {
    this.fire('onchange', {current, type: 'click'});
    this.current = current;
    this.$model.active = current;
  }
  ,
  setNavPos() {
    api.toast({
      msg: '调整Nav位置逻辑等待外形查询功能后完善'
    })
  }
}
</script>

<style>

.a-tabs {
  background: #FFF;
}

.a-tabs__wrap {
  flex-flow: row nowrap;
  height: 44px;
  align-items: center;
}

.a-tabs__nav {
  text-align: center;
  font-size: 14px;
  height: 44px;
  line-height: 44px;
}

.a-tabs__nav--scroll {
  padding: 0 15px;
}

.a-tabs__nav--flat {
  flex: 1;
}

.a-tabs__nav--normal {
  color: #666;
  font-weight: normal;
}

.a-tabs__nav--active {
  color: #333;
  font-weight: bold;
}

.a-tabs__content {
  flex: 1;
  min-height: 100px;
}

.a-tabs__pane {
  flex: 1;
}
</style>