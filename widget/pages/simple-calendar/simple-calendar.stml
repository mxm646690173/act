<template name="simple-calendar">
  <view class="page">
    <a-nav-bar title="simple-calendar" left-arrow/>
    <scroll-view style="flex: 1;" scroll-y>


      <view class="simple">
        <text class="simple-title">
          选择单个日期
        </text>
        <text class="simple-desc">
          下面演示了结合单元格来使用日历组件的用法，日期选择完成后会触发 confirm 事件。
        </text>
        <a-cell-group round>
          <a-cell is-link @click="choose(0)" title="选择单个日期" :value="value[0]"/>
        </a-cell-group>
      </view>

      <view class="simple">
        <text class="simple-title">
          双向绑定
        </text>
        <text class="simple-desc">
          下面演示了使用 $default-date 来做双向绑定，自动接管数据变化绑定。
        </text>
        <a-cell-group round>
          <a-cell is-link @click="choose(1)" title="选择单个日期" :value="value[1]"/>
        </a-cell-group>
      </view>

    </scroll-view>


    <a-calendar style="height: 500px;"
                $show="show[0]"
                :default-date="value[0]"
                title="日历"
                :min-date="new Date(2010,1,1)"
                :poppable="false"
                :show-confirm="false"
                @confirm="myConfirm"
                height="500"/>


    <a-calendar style="height: 500px;"
                $show="show[1]"
                $default-date="value[1]"
                title="日历"
                :min-date="new Date(2010,1,1)"
                :poppable="false"
                :show-confirm="false"
                height="500"/>
  </view>
</template>

<script>
import ANavBar from "../../components/act/a-nav-bar.stml";
import ACellGroup from "../../components/act/a-cell-group.stml";
import ACell from "../../components/act/a-cell.stml";
import ACalendar from "../../components/act/a-calendar.stml";
import APopup from "../../components/act/a-popup.stml";
import {Toast} from "../../components/act";

export default {
  name: "simple-calendar",
  components: {APopup, ACalendar, ACell, ACellGroup, ANavBar},
  data() {
    return {
      value: Array.from({length: 10}).fill(''),
      show: Array.from({length: 10}).fill(false),
      show1: true
    }
  },
  methods: {
    choose(index) {
      this.data.show[index] = true;
    }
  },
  myConfirm({detail}) {
    this.data.value[0] = detail;
    Toast(detail)
  }
}
</script>

<style scoped>
.page {
  flex: 1;
  background-color: #F8F8F8;
}


.simple {
  padding-bottom: 28px;
}

.simple-title {
  margin: 16px;
  font-weight: 600;
  font-size: 18px;
}

.simple-desc {
  color: #999;
  font-size: 14px;
  margin: 0 16px 16px;
}

.demo-calendar {
  margin: 12px 12px 0;
  overflow: hidden;
  border-radius: 8px;
}


</style>